(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{393:function(t,a,s){t.exports=s.p+"assets/img/image-20220407130522792.924620b8.png"},394:function(t,a,s){t.exports=s.p+"assets/img/image-20220407130616124.da7a01eb.png"},395:function(t,a,s){t.exports=s.p+"assets/img/image-20220407131606213.97ce09c3.png"},396:function(t,a,s){t.exports=s.p+"assets/img/image-20220407134839753.ed408a9f.png"},397:function(t,a,s){t.exports=s.p+"assets/img/image-20220407135646247.178b7fa3.png"},398:function(t,a,s){t.exports=s.p+"assets/img/image-20220407165955225.324ab018.png"},399:function(t,a,s){t.exports=s.p+"assets/img/image-20220407170839040.e110718f.png"},400:function(t,a,s){t.exports=s.p+"assets/img/image-20220407171405320.02dd1105.png"},401:function(t,a,s){t.exports=s.p+"assets/img/image-20220407193905817.647e9b64.png"},402:function(t,a,s){t.exports=s.p+"assets/img/image-20220408151845780.7fc4103f.png"},403:function(t,a,s){t.exports=s.p+"assets/img/image-20220409155818780.0d7980a4.png"},404:function(t,a,s){t.exports=s.p+"assets/img/image-20220409165042082.094878b1.png"},405:function(t,a,s){t.exports=s.p+"assets/img/image-20220409165150969.20856ee7.png"},406:function(t,a,s){t.exports=s.p+"assets/img/image-20220409165751367.ee2e9c24.png"},407:function(t,a,s){t.exports=s.p+"assets/img/image-20220410154533178.ac99c0f0.png"},408:function(t,a,s){t.exports=s.p+"assets/img/image-20220410162839598.a332b35a.png"},409:function(t,a,s){t.exports=s.p+"assets/img/image-20220410163447054.c17354cd.png"},410:function(t,a,s){t.exports=s.p+"assets/img/image-20220410165314255.0050759e.png"},411:function(t,a,s){t.exports=s.p+"assets/img/image-20220410173034668.4f575033.png"},412:function(t,a,s){t.exports=s.p+"assets/img/image-20220410173057920.312542f9.png"},413:function(t,a,s){t.exports=s.p+"assets/img/image-20220411161842009.06872912.png"},414:function(t,a,s){t.exports=s.p+"assets/img/image-20220410173928946.cb461d28.png"},415:function(t,a,s){t.exports=s.p+"assets/img/image-20220416192758590.45948baf.png"},416:function(t,a,s){t.exports=s.p+"assets/img/image-20220416193003008.6eb151c2.png"},417:function(t,a,s){t.exports=s.p+"assets/img/image-20220416194302423.f09384dc.png"},418:function(t,a,s){t.exports=s.p+"assets/img/image-20220416194542152.3c1e074d.png"},419:function(t,a,s){t.exports=s.p+"assets/img/image-20220416194746586.ffc77403.png"},420:function(t,a,s){t.exports=s.p+"assets/img/image-20220416195150737.91ceb74b.png"},421:function(t,a,s){t.exports=s.p+"assets/img/image-20220416195933038.22e8690f.png"},422:function(t,a,s){t.exports=s.p+"assets/img/image-20220416201115446.bef7cb47.png"},423:function(t,a,s){t.exports=s.p+"assets/img/image-20220416201209090.2d978755.png"},424:function(t,a,s){t.exports=s.p+"assets/img/image-20220416201235496.e86c9025.png"},425:function(t,a,s){t.exports=s.p+"assets/img/image-20220416202532917.3abf7caa.png"},426:function(t,a,s){t.exports=s.p+"assets/img/image-20220416202606541.3be6a214.png"},427:function(t,a,s){t.exports=s.p+"assets/img/image-20220416202647943.b19203a0.png"},428:function(t,a,s){t.exports=s.p+"assets/img/image-20220416202756084.be8b80d5.png"},429:function(t,a,s){t.exports=s.p+"assets/img/image-20220425165448953.3efe03e6.png"},430:function(t,a,s){t.exports=s.p+"assets/img/image-20220425170551905.44754105.png"},431:function(t,a,s){t.exports=s.p+"assets/img/image-20220425171928868.e57825bb.png"},432:function(t,a,s){t.exports=s.p+"assets/img/image-20220425173955747.005205ba.png"},433:function(t,a,s){t.exports=s.p+"assets/img/image-20220425174036835.12304d3c.png"},434:function(t,a,s){t.exports=s.p+"assets/img/image-20220425174059350.1ccf1de5.png"},443:function(t,a,s){"use strict";s.r(a);var r=s(2),i=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"软考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#软考"}},[t._v("#")]),t._v(" "),a("strong",[t._v("软考：")])]),t._v(" "),a("h2",{attrs:{id:"计算机组成原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算机组成原理"}},[t._v("#")]),t._v(" "),a("strong",[t._v("计算机组成原理")])]),t._v(" "),a("h3",{attrs:{id:"数据的表示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据的表示"}},[t._v("#")]),t._v(" 数据的表示")]),t._v(" "),a("ul",[a("li",[t._v("一个字节8位，1B=8bit")])]),t._v(" "),a("p",[a("img",{attrs:{src:s(393),alt:"image-20220407130522792"}})]),t._v(" "),a("p",[a("img",{attrs:{src:s(394),alt:"image-20220407130616124"}})]),t._v(" "),a("h3",{attrs:{id:"计算机结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算机结构"}},[t._v("#")]),t._v(" 计算机结构")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("程序计数器PC")]),t._v("："),a("strong",[t._v("用于存放下一条指令所在单元的地址的地方")]),t._v("。在程序执行前，必须将程序的起始地址，即程序的一条指令所在的内存单元地址送入程序计数器，当执行指令时，cpu将自动修改程序计数器的内容，即每执行一条指令程序计数器增加一个量，使其指向下一个待指向的指令。程序的转移等操作也是通过寄存器来实现的。")]),t._v(" "),a("li",[t._v("cpu的程序计数器PC用于保存要执行的指令的地址吗，访问内存时，需要将内存地址送入存储器地址寄存器MAR中，向内存写入数据时，待写入的数据要先放入数据寄存器MUR。程序中的指令一般放在内存中，要执行时，首先要访问内存取得指令保存在指令寄存器IR中。计算机中指令的执行过程一般分为取指令、分析指令并获得操作数、运算和传送结果等阶段，每条指令执行时都要经过这几个阶段。")]),t._v(" "),a("li",[a("strong",[t._v("地址寄存器")]),t._v("："),a("strong",[t._v("一般用来保存当前cpu所访问的内存单元的地址")]),t._v("，以方便内存的读写操作。")]),t._v(" "),a("li",[a("strong",[t._v("累加器")]),t._v("：时专门存放算术或逻辑运算的一个操作数运算和运行结果的寄存器。")]),t._v(" "),a("li",[a("strong",[t._v("算术逻辑单元ALU")]),t._v("是cpu的执行单元，主要负责运算工作。")])]),t._v(" "),a("p",[a("img",{attrs:{src:s(395),alt:"image-20220407131606213"}})]),t._v(" "),a("h3",{attrs:{id:"寻址方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#寻址方式"}},[t._v("#")]),t._v(" 寻址方式")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("立即寻址")]),t._v("：指令的地址字段指出的不是操作数的地址，而是"),a("strong",[t._v("操作数本身")]),t._v("。")]),t._v(" "),a("li",[a("strong",[t._v("直接寻址")]),t._v("：指令格式的地址字段中直接指出"),a("strong",[t._v("操作数在内存的地址")]),t._v("。")]),t._v(" "),a("li",[a("strong",[t._v("寄存器寻址")]),t._v("：指令中给出的操作数地址不是内存地址的单元号，而是通用"),a("strong",[t._v("寄存器的编号")]),t._v("（当操作数不存放在内存中，而是放在cpu的通用寄存器中时，可采用寄存器的寻址方式）。")]),t._v(" "),a("li",[t._v("寄存器的间接寻址方式与寄存器寻址方式的"),a("strong",[t._v("区别")]),t._v("在于：指令格式中操作数地址所指向的寄存器中存放的内容不是操作数而是操作数的地址。")]),t._v(" "),a("li",[t._v("相对寻址的"),a("strong",[t._v("特点")]),t._v("：把程序计数器PC的内容加上指令格式中的形式地址来形成操作数的有有效地址。")])]),t._v(" "),a("h3",{attrs:{id:"计算机体系结构分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算机体系结构分类"}},[t._v("#")]),t._v(" 计算机体系结构分类")]),t._v(" "),a("p",[a("img",{attrs:{src:s(396),alt:"image-20220407134839753"}})]),t._v(" "),a("h3",{attrs:{id:"cisc和risc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cisc和risc"}},[t._v("#")]),t._v(" CISC和RISC")]),t._v(" "),a("p",[a("img",{attrs:{src:s(397),alt:"image-20220407135646247"}})]),t._v(" "),a("h3",{attrs:{id:"流水线计算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流水线计算"}},[t._v("#")]),t._v(" 流水线计算")]),t._v(" "),a("p",[t._v("*"),a("em",[t._v("计算公式：一条指令执行的时间+（指令数-1）"),a("em",[t._v("流水线周期")])])]),t._v(" "),a("p",[t._v("流水线的吞吐率："),a("strong",[t._v("TP=指令条数/流水线执行周期")])]),t._v(" "),a("p",[t._v("流水线的加速比：S=不使用流水线时间/使用流水线的时间")]),t._v(" "),a("p",[a("img",{attrs:{src:s(398),alt:"image-20220407165955225"}})]),t._v(" "),a("h3",{attrs:{id:"层次化存储结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#层次化存储结构"}},[t._v("#")]),t._v(" 层次化存储结构")]),t._v(" "),a("p",[a("img",{attrs:{src:s(399),alt:"image-20220407170839040"}})]),t._v(" "),a("p",[a("strong",[t._v("cache")])]),t._v(" "),a("p",[t._v("访问命中率为cpu需要访问的东西cache里面有，可以直接从cache里面拿，则cpu不需要从内存中拿，则提高了效率")]),t._v(" "),a("p",[a("img",{attrs:{src:s(400),alt:"image-20220407171405320"}})]),t._v(" "),a("p",[t._v("时间局部性，空间局部性")]),t._v(" "),a("p",[a("img",{attrs:{src:s(401),alt:"image-20220407193905817"}})]),t._v(" "),a("h3",{attrs:{id:"总线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总线"}},[t._v("#")]),t._v(" 总线")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("数据总线是用于在计算机中传送数据的总线")]),t._v("，他可以吧cpu的数据传送到存储器或输入输出接口等其他部件，也可以将其他部件的数据传送到cpu。数据总线的位数是微型计算机的一个重要指标，他通常与微处理的"),a("strong",[t._v("字长")]),t._v("相一致。")]),t._v(" "),a("li",[a("strong",[t._v("地址总线是传送地址信息的总线")]),t._v("，根据地址总线的多少可以确定内存的大小，如32位的地址总线可以允许2的32次方的内存容量")])]),t._v(" "),a("p",[a("img",{attrs:{src:s(402),alt:"image-20220408151845780"}})]),t._v(" "),a("h2",{attrs:{id:"操作系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作系统"}},[t._v("#")]),t._v(" 操作系统")]),t._v(" "),a("h3",{attrs:{id:"内容提要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内容提要"}},[t._v("#")]),t._v(" 内容提要")]),t._v(" "),a("p",[a("img",{attrs:{src:s(403),alt:" "}})]),t._v(" "),a("h3",{attrs:{id:"pv操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pv操作"}},[t._v("#")]),t._v(" pv操作")]),t._v(" "),a("ul",[a("li",[t._v("通俗理解p操作用于阻塞线程，V操作用于唤醒线程。")]),t._v(" "),a("li",[t._v("在前驱图中，有几个前驱，该程序就实现几个P操作，有几个后继就实现几个V操作。")]),t._v(" "),a("li",[t._v("对于前驱图，箭头表示前趋和后继关系，前趋进程完成需要通知后继进程（用V操作通知），后继进程开始前需要检查前趋进程是否完成（用P操作检查）。也就是说，在前趋图中，每一个箭头流出指向后继进程，都会有一个V操作通知后继，每一个箭头的流入都是始于前趋进程，需要检查前趋进程是否完成，用P操作进程检查。")])]),t._v(" "),a("p",[a("img",{attrs:{src:s(404),alt:"image-20220409165042082"}})]),t._v(" "),a("p",[a("img",{attrs:{src:s(405),alt:"image-20220409165150969"}})]),t._v(" "),a("p",[a("img",{attrs:{src:s(406),alt:"image-20220409165751367"}})]),t._v(" "),a("h3",{attrs:{id:"存储管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储管理"}},[t._v("#")]),t._v(" 存储管理")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("分区存储组织")]),t._v(" "),a("p",[a("img",{attrs:{src:s(407),alt:"image-20220410154533178"}})])]),t._v(" "),a("li",[a("p",[t._v("页式存储：页式存储的逻辑地址与物理地址的页内地址是一样的")]),t._v(" "),a("p",[a("img",{attrs:{src:s(408),alt:"image-20220410162839598"}})])]),t._v(" "),a("li",[a("p",[t._v("页面置换算法（常考先进先出，和最近最少使用算法）")]),t._v(" "),a("p",[a("img",{attrs:{src:s(409),alt:"image-20220410163447054"}})])])]),t._v(" "),a("p",[t._v("指令只会产生一次缺页中断，操作数会产生两次缺页中断。")]),t._v(" "),a("p",[a("img",{attrs:{src:s(410),alt:"image-20220410165314255"}})]),t._v(" "),a("h3",{attrs:{id:"文件管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件管理"}},[t._v("#")]),t._v(" 文件管理")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("位示图法")]),t._v(" "),a("p",[a("img",{attrs:{src:s(411),alt:"image-20220410173034668"}})])])]),t._v(" "),a("p",[a("img",{attrs:{src:s(412),alt:"image-20220410173057920"}})]),t._v(" "),a("p",[a("img",{attrs:{src:s(413),alt:"image-20220411161842009"}})]),t._v(" "),a("h3",{attrs:{id:"微内核操作系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#微内核操作系统"}},[t._v("#")]),t._v(" 微内核操作系统")]),t._v(" "),a("p",[a("img",{attrs:{src:s(414),alt:"image-20220410173928946"}})]),t._v(" "),a("h2",{attrs:{id:"数据库系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库系统"}},[t._v("#")]),t._v(" 数据库系统")]),t._v(" "),a("h3",{attrs:{id:"三级模式两级映射"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三级模式两级映射"}},[t._v("#")]),t._v(" 三级模式两级映射")]),t._v(" "),a("p",[a("img",{attrs:{src:s(415),alt:"image-20220416192758590"}})]),t._v(" "),a("h3",{attrs:{id:"数据库设计过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库设计过程"}},[t._v("#")]),t._v(" 数据库设计过程")]),t._v(" "),a("p",[a("img",{attrs:{src:s(416),alt:"image-20220416193003008"}})]),t._v(" "),a("h3",{attrs:{id:"e-r模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#e-r模型"}},[t._v("#")]),t._v(" E-R模型")]),t._v(" "),a("p",[t._v("实体可以理解为一个表")]),t._v(" "),a("ul",[a("li",[t._v("1：1联系，可以转为两个实体，1：n可以转为两个或多个实体（把n归为多的那个实体那边，也可以把1：n单独拿出来作为一个实体），n：M至少转三个以上的实体（n和m分别一个实体，n:M作为一个实体）")])]),t._v(" "),a("p",[a("img",{attrs:{src:s(417),alt:"image-20220416194302423"}})]),t._v(" "),a("h3",{attrs:{id:"关系代数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关系代数"}},[t._v("#")]),t._v(" 关系代数")]),t._v(" "),a("p",[a("img",{attrs:{src:s(418),alt:"image-20220416194542152"}})]),t._v(" "),a("p",[a("img",{attrs:{src:s(419),alt:"image-20220416194746586"}})]),t._v(" "),a("p",[a("img",{attrs:{src:s(420),alt:"image-20220416195150737"}})]),t._v(" "),a("h3",{attrs:{id:"规范化理论-函数依赖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#规范化理论-函数依赖"}},[t._v("#")]),t._v(" 规范化理论-函数依赖")]),t._v(" "),a("p",[a("img",{attrs:{src:s(421),alt:"image-20220416195933038"}})]),t._v(" "),a("h3",{attrs:{id:"规范化理论-键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#规范化理论-键"}},[t._v("#")]),t._v(" 规范化理论-键")]),t._v(" "),a("p",[a("img",{attrs:{src:s(422),alt:"image-20220416201115446"}})]),t._v(" "),a("h3",{attrs:{id:"规范化理论-求候选键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#规范化理论-求候选键"}},[t._v("#")]),t._v(" 规范化理论-求候选键")]),t._v(" "),a("p",[a("img",{attrs:{src:s(423),alt:"image-20220416201209090"}})]),t._v(" "),a("p",[a("img",{attrs:{src:s(424),alt:"image-20220416201235496"}})]),t._v(" "),a("h3",{attrs:{id:"规范化理论"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#规范化理论"}},[t._v("#")]),t._v(" 规范化理论")]),t._v(" "),a("p",[t._v("第一范式")]),t._v(" "),a("p",[a("img",{attrs:{src:s(425),alt:"image-20220416202532917"}})]),t._v(" "),a("p",[t._v("第二范式")]),t._v(" "),a("p",[a("img",{attrs:{src:s(426),alt:"image-20220416202606541"}})]),t._v(" "),a("p",[t._v("第三范式")]),t._v(" "),a("p",[a("img",{attrs:{src:s(427),alt:"image-20220416202647943"}})]),t._v(" "),a("p",[t._v("BC范式")]),t._v(" "),a("p",[a("img",{attrs:{src:s(428),alt:"image-20220416202756084"}})]),t._v(" "),a("h2",{attrs:{id:"计算机网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算机网络"}},[t._v("#")]),t._v(" 计算机网络")]),t._v(" "),a("h3",{attrs:{id:"_7层模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7层模型"}},[t._v("#")]),t._v(" 7层模型")]),t._v(" "),a("p",[a("img",{attrs:{src:s(429),alt:"image-20220425165448953"}})]),t._v(" "),a("h3",{attrs:{id:"网络技术标准与协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络技术标准与协议"}},[t._v("#")]),t._v(" 网络技术标准与协议")]),t._v(" "),a("ul",[a("li",[t._v("STMP邮件传输协议")]),t._v(" "),a("li",[t._v("POP3邮件收取协议")]),t._v(" "),a("li",[t._v("MIME多用途互联网邮件拓展类型（即出来除了传邮件外还传输一些其他的多媒体数据)")]),t._v(" "),a("li",[t._v("TCP和UDP均提供了端口寻址功能")])]),t._v(" "),a("p",[a("img",{attrs:{src:s(430),alt:"image-20220425170551905"}})]),t._v(" "),a("h3",{attrs:{id:"计算机网络结构的分类-拓扑结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算机网络结构的分类-拓扑结构"}},[t._v("#")]),t._v(" 计算机网络结构的分类-拓扑结构")]),t._v(" "),a("p",[a("img",{attrs:{src:s(431),alt:"image-20220425171928868"}})]),t._v(" "),a("p",[t._v("IP地址")]),t._v(" "),a("p",[a("img",{attrs:{src:s(432),alt:"image-20220425173955747"}})]),t._v(" "),a("p",[t._v("子网划分")]),t._v(" "),a("p",[a("img",{attrs:{src:s(433),alt:"image-20220425174036835"}})]),t._v(" "),a("p",[a("img",{attrs:{src:s(434),alt:"image-20220425174059350"}})])])}),[],!1,null,null,null);a.default=i.exports}}]);